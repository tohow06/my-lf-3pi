/**
 * Blink the default LED on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  single-threaded: true
}

preamble {=
  #include <stdio.h>
  #include <pico/stdlib.h>
  #include <hardware/gpio.h>

  #define SIO_BASE 0xd0000000
  #define GPIO_OUT_SET_REG (*(volatile uint32_t*)(SIO_BASE + 0x14))  
  #define GPIO_OUT_CLR_REG (*(volatile uint32_t*)(SIO_BASE + 0x18))  
  #define LED_PIN PICO_DEFAULT_LED_PIN
=}

main reactor {
  timer t(0, 50 ms)          // Timer set to trigger every 50 ms
  state led_on: bool = false // Boolean to track the LED state

  // Initialize LED pin direction as output at startup
  reaction(startup) {=
      gpio_init(LED_PIN);
      gpio_set_dir(LED_PIN, GPIO_OUT);
  =}

  // Toggle the LED state every time the timer triggers
  reaction(t) {=
    self->led_on = !self->led_on;   // Invert the LED state (toggle)
    printf("LED State: %b\n", self->led_on);  // Print the current LED state
    
    // Turn the LED on or off based on the state
    if (self->led_on) {
      GPIO_OUT_CLR_REG = (1 << LED_PIN);  // Clear the pin to turn off the LED
    } else {
      GPIO_OUT_SET_REG = (1 << LED_PIN);  // Set the pin to turn on the LED
    }
  =}
}
