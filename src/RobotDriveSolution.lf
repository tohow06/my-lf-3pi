/**
 * Template for robot driving lab exercises. This template just periodically switches between a
 * STOPPED and a DRIVING mode, updating the LCD display on each change of mode.
 */
target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  single-threaded: true
}

import Display from "lib/Display.lf"
import Motors from "lib/Motors.lf"

reactor Robot {
  input drive: bool      // Toggle mode.
  output notify: string  // Notify of mode change.
  output left_power: float
  output right_power: float

  reaction(startup) -> notify {=
    lf_set(notify, "INIT");
  =}

  initial mode STOPPED {
    reaction(drive) -> reset(DRIVING), notify, left_power, right_power {=
      if (drive->value) {
        lf_set_mode(DRIVING);
        lf_set(notify, "DRIVING");
        lf_set(left_power, 0.1);
        lf_set(right_power, 0.1);
      }
    =}
  }

  mode DRIVING {
    reaction(drive) -> reset(STOPPED), notify, left_power, right_power {=
      if (!drive->value) {
        lf_set_mode(STOPPED);
        lf_set(notify, "STOPPED");
        lf_set(left_power, 0);
        lf_set(right_power, 0);
      }
    =}
  }
}

main reactor {
  timer t(0, 2 sec)
  state drive: bool = false
  robot = new Robot()
  display = new Display()
  motors = new Motors()
  robot.notify -> display.line0
  robot.left_power -> motors.left_power
  robot.right_power -> motors.right_power

  reaction(t) -> robot.drive {=
    lf_set(robot.drive, self->drive);
    // Toggle the drive state variable for next time.
    self->drive = !self->drive;
  =}
}
